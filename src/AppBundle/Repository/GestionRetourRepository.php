<?php

namespace AppBundle\Repository;

use Doctrine\ORM\Mapping;

/**
 * GestionRetourRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class GestionRetourRepository extends \Doctrine\ORM\EntityRepository
{
        public function findInStock($idAgence)
        {
            $query = $this->createQueryBuilder('g')
                ->select('g', 'm','d','e')
                ->join('g.magasin', 'm')
                ->join('g.donneurOrdre', 'd')
                ->join('g.emplacement', 'e')
                ->where('g.dateSortieEntrepot IS NULL')
                ->andWhere('g.agence = :agence')
                ->orderBy('g.dateSortieEntrepot')
                ->setParameter('agence', $idAgence)
                ->getQuery();

            return $query->getResult();
        }

    public function rechercheRetours($recherche, $agence)
    {
        $query = $this->createQueryBuilder('g')
            ->select('g', 'm','d', 'e')
            ->join('g.magasin', 'm')
            ->join('g.donneurOrdre', 'd')
            ->join('g.emplacement', 'e')
            ->where('g.numeroSage LIKE :recherche')
            ->orWhere('g.numeroDonneurOrdre LIKE :recherche')
            ->orWhere('g.nomDestinataire LIKE :recherche')
            ->orWhere('m.nomMagasin LIKE :recherche')
            ->orWhere('d.nomDonneurOrdre LIKE :recherche')
            ->andWhere('g.agence = :agence')
            ->orderBy('g.dateEntreeEntrepot')
            ->setParameter('recherche', '%' . $recherche . '%')
            ->setParameter('agence', $agence)
            ->getQuery();

        return $query->getArrayResult();
    }

    public function findStockForTravel($rattachement, $agence)
    {

        $query = $this->createQueryBuilder('g')
            ->select('g','d','r', 'm')
            ->join('g.magasin', 'm')
            ->join('g.donneurOrdre', 'd')
            ->join('d.rattachement', 'r')
            ->Where('r.nom = :rattachement')
            ->andWhere('g.voyage = 0')
            ->andWhere('g.agence = :agence')
            ->andWhere('g.dateSortieEntrepot IS NULL')
            ->orderBy('g.dateSortieEntrepot')
            ->setParameter('rattachement', $rattachement)
            ->setParameter('agence', $agence)
            ->getQuery();

        return $query->getResult();
    }

    public function stockageEnAttente($numeroColis, $idAgence)
    {
        $query = $this->createQueryBuilder('g')
            ->select('g', 'm','d','e')
            ->join('g.magasin', 'm')
            ->join('g.donneurOrdre', 'd')
            ->join('g.emplacement', 'e')
            ->where('g.dateSortieEntrepot IS NULL')
            ->andWhere('g.agence = :agence')
            ->andWhere('g.numeroSage = :numColis')
            ->orderBy('g.dateSortieEntrepot')
            ->setParameter('agence', $idAgence)
            ->setParameter('numColis', $numeroColis)
            ->orderBy('g.id', 'DESC')
            ->getQuery();

        return $query->getResult();
    }

    public function siRetourExiste($recherche)
    {
        $query = $this->createQueryBuilder('g')
            ->select('count(g)')
            ->where('g.numeroSage LIKE :recherche')
            ->andWhere('g.dateSortieEntrepot IS NULL')
            ->setParameter('recherche', '%' . $recherche . '%')
            ->getQuery();

        return $query->getSingleScalarResult();
    }
}
